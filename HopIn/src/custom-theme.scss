
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$dark-blue: (
    50: #8ea4ac,
    100: #78929c,
    200: #78929c,
    300: #4a6e7a,
    400: #345c6a,
    500: #1e4a5a,
    600: #1b4251,
    700: #183b48,
    800: #15333e,
    900: #122c36,
    A100: #78929c,
    A200: #78929c,
    A400: #345c6a,
    A700: #183b48,
    contrast: (
        50: black,
        100: black,
        200: black,
        300: black,
        400: black,
        500: white,
        600: white,
        700: white,
        800: white,
        900: white,
        A100: black,
        A200: black,
        A400: black,
        A700: white,
    )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$HopIn-primary: mat.define-palette($dark-blue);
$HopIn-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$HopIn-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$HopIn-theme: mat.define-light-theme((
  color: (
    primary: $HopIn-primary,
    accent: $HopIn-accent,
    warn: $HopIn-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($HopIn-theme);

